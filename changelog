0.4.0-dev (updated to dffd7b0d7a08e0c59a33f5da4730a49484eb2cdb)
	completely remove dependency on haskell-src-exts
	remove lots of 'try' from the parser which should start to improve
	  the error messages
	fix some trailing whitespace issues in the keyword style functions,
	  e.g. extract(day from x), dealing with trailing whitespace on
	  the parens was fixed
	improve some cases of parsing chained prefix or postfix operators
	  (still some issues here)
	parse schema qualified table names in from clause (thanks to SÃ¶nke
	  Hahn)
	fix bug where the 'as' was incorrectly optional in a with
	  expression list item
	fix bug in set operations where 'all' was assumed as the default
	  instead of 'distinct', e.g. 'select * from t union select * from
	  u' was parsed to 'select * from t union all select * from u'
	  instead of 'select * from t union distinct select * from u'.
	fix corresponding bug where 'distinct' was being pretty printed in
	  this case and 'all' was not since the assumed default was the
	  wrong way round
	replace Int with Integer in the Syntax
	derive Data and Typeable in all the Syntax types
0.3.1 (commit 5cba9a1cac19d66166aed2876d809aef892ff59f)
	update to work with ghc 7.8.1
0.3.0 (commit 9e75fa93650b4f1a08d94f4225a243bcc50445ae)
	fix the basic operator fixity parsing
	swap the order in select item abstract syntax so it is now
	  (expression, alias) which matches the order in the concrete
	  syntax
	rename ScalarExpr -> ValueExpr
	rename Duplicates to SetQuantifier
	rename qeDuplicates to qeSetQuantifier
	rename OrderField to SortSpec
	rename InThing to InPredValue
	add support for ? for parameterized queries
	add new abstract syntax for special operators whose concrete
	  syntax is a kind of limited named parameters syntax
	add more parsing for these operators: position, convert,
	  translate, overlay, trim, and improve the substring parsing
	add support for multi keyword type names
	   previously:
	     double precision
	     character varying
	   now:
	     double precision,
	     character varying,
	     char varying,
	     character large object,
	     char large object,
	     national character,
	     national char,
	     national character varying,
	     national char varying,
	     national character large object,
	     nchar large object,
	     nchar varying,
	     bit varying
	rename tools/PrettyIt to tools/SQLIdent and add to cabal file as
	  optional executable (disabled by default)
	rename the qeFetch field in Select to qeFetchFirst
	change the pretty printer to use 'fetch first' instead of
	  'fetch next'

0.2.0 (commit 9ea29c1a0ceb2c3f3157fb161d1ea819ea5d64d4)
	'' quotes in string literal
	parse simple interval literal e.g. "interval '1 week'"
	support . in identifiers as a dot operator
	support quoted identifiers
	partial support for explicit window frames
	support multiple test expressions in when branches in case expressions
	rename CastOp to TypedLit
	support typenames with precision and scale in casts
	support nulls first and nulls last in order by
	support grouping expressions: group by (), grouping sets, cube,
	  rollup and parens
	support with recursive
	support values table literal
	support 'table t' syntax
	rename fields qe1 and qe1 in combinequeryexpr to qe0 and qe1
	add support for functions in from clause
	add support for lateral in from clause
	support column aliases in common table expressions
	refactor the tests and add lots more
	parse * in any scalar context instead of trying to restrict it
	support row ctor without 'row' e.g. (a,b) = (c,d)
	add % ^ | & ~ operators
	support ansi standard syntax for offset n rows and fetch first n
	  rows only
	fix keyword parsing to be case insensitive

0.1.0.0 (commit 9bf4012fc40a74ad9a039fcb936e3b9dfc3f90f0)
	initial release
